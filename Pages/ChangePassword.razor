@page "/ChangePassword"
@using Blazored.SessionStorage
@inject HttpClient Http
@inject AuthenticationStateProvider asp
@inject ISessionStorageService sessionStorageService
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

<h1>تغییر کلمه عبور</h1>

<div>
    <EditForm Model="@mu" OnSubmit="@CheckSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <table>
            <tr>
                <td>
                    شرکت:
                </td>
                <td>
                    <InputText class="form-control" id="txtCompany" @bind-Value="@mu.Company" readonly/>
                </td>
            </tr>
            <tr>
                <td>
                    سال مالی:
                </td>
                <td>
                    <InputText class="form-control" id="txtYear" @bind-Value="@mu.Year" readonly/>
                </td>
            </tr>
            <tr>
                <td>
                    نام کاربری:
                </td>
                <td>
                    <InputText class="form-control" id="txtUserName" @bind-Value="@mu.UserName" readonly/>
                </td>
            </tr>
            <tr>
                <td>
                    کلمه عبور:
                </td>
                <td>
                    <InputText class="form-control"  id="txtPassword" type="password" @bind-Value="@mu.Password" />
                </td>
            </tr>
            <tr>
                <td>
                    تکرار کلمه عبور:
                </td>
                <td>
                    <InputText class="form-control"  id="txtPassword2" type="password" @bind-Value="@mu.Password2" />
                </td>
            </tr>
            <tr>
                <td>
                    <button class="btn btn-danger" type="submit">ذخیره</button>
                </td>
                <td></td>
            </tr>
        </table>
    </EditForm>
</div>


@code {
    private myuser mu = new myuser();
    private Business.Kernel k = new Business.Kernel();
    private MyApp myapp = new MyApp();
    private MyAppWhere maw = new MyAppWhere();
    private string mytoken = "";
    protected override async Task OnInitializedAsync()
    {
        mytoken = await sessionStorageService.GetItemAsync<string>("Token");

        mu.UserName = await sessionStorageService.GetItemAsync<string>("User");
        mu.Company = await sessionStorageService.GetItemAsync<string>("Company");
        mu.Year = await sessionStorageService.GetItemAsync<string>("Year");
        
        myapp.Company = await sessionStorageService.GetItemAsync<string>("Company");
        myapp.Year = await sessionStorageService.GetItemAsync<string>("Year");
        maw.myapp = myapp;
        maw.Wheres = " ";
        
        ////Fill Tafsil_Group 
        //LTafsil_Group = await k.GetTafsil_Group(maw,mytoken);
        ////Fill Accout
        ////maw.Wheres = " WHERE Last_Acc = 1 ";
        ////LAcc = await k.GetAccounts(maw,mytoken);
        ////Fill Tafsil
        ////read tafsil_group
        //var gno = "";
        //foreach (var i in LTafsil_Group)
        //{
        //    if(String.IsNullOrEmpty(gno))
        //    {
        //        gno = i.G_No;
        //    }
        //    else
        //    {
        //        gno +="," + i.G_No;
        //    }
        //}
        //maw.Wheres = " WHERE G_NO IN(" + gno + ")";
        //LTafsil = await k.GetTafsil(maw,mytoken);
        //mod.Order_Date = Tarikh; 
        
    }
    private async Task CheckSubmit()
    {
        if (!String.IsNullOrEmpty(mu.Password) || !String.IsNullOrEmpty(mu.Password2))
        {
            if(mu.Password == mu.Password2)
            {
                if(!String.IsNullOrEmpty(mytoken))
                {
                    var result = await  k.ChangePassword(mu,mytoken);
                    //logout bayad beshe
                    //Navigation.NavigateTo("NewFactorDetails/" + myOrders);
                    await ((AuthState.myAuthStateProvider)asp).MarkUserAsLogOuted();
                    Navigation.NavigateTo("/login");
                }
            }
            else
            {
                //MSG PASS1 MOKHLEFE PASS2
                await JsRuntime.InvokeAsync<object>("alert", "کلمه عبور با تکرار کلمه عبور یکسان نیست"); 
            }
        }
        else
        {
            //MSG MEGHDAR NADARAD
            await JsRuntime.InvokeAsync<object>("alert", "کلمه عبور و تکرار آن الزامیست"); 
        }

        return ;
    }
}
